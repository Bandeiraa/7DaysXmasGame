[gd_scene load_steps=4 format=2]

[ext_resource path="res://Scenes/Enemies/MageElf.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/Elfs/WarriorElf.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Scripts/Enemy.gd\"

export var armor = 12 setget setArmor
var offset = Vector2()
#var mageSpells = [preload(\"res://Scenes/Enemies/IceBeam.tscn\"), preload(\"res://Scenes/Enemies/FireWave.tscn\")]

onready var shootTimer = get_node(\"ShootTimer\")
onready var warriorElf = get_node(\"ElfAnimator\")

func _ready():
	var _connection
	add_to_group(\"Enemy\")
	chooseDirection()
	_connection = connect(\"area_entered\", self, \"areaEntered\")
	warriorElf.play(\"Walk\")
	#shoot()
	
func chooseDirection():
	randomize()
	var direction = [\"left\", \"right\"]
	var chooseDirection = direction[randi() % direction.size()]
	match chooseDirection:
		\"left\":
			velocity.x = velocity.x
		\"right\":
			velocity.x = -velocity.x
			
func _process(_delta):
	if get_position().x <= 0 + 10:
		velocity.x = abs(velocity.x)
	if get_position().x >= get_viewport_rect().size.x - 10:
		velocity.x = -abs(velocity.x)
		
func areaEntered(enemyArea):
	if enemyArea.is_in_group(\"Goblin\"):
		enemyArea.armor -= 1
		queue_free()
		
func setArmor(newValue):
	armor = newValue
	if armor <= 0:
		queue_free()
"

[node name="WarriorElf" instance=ExtResource( 1 )]
script = SubResource( 1 )
velocity = Vector2( 25, 35 )
armor = 8

[node name="EnemySprite" parent="." index="0"]
texture = ExtResource( 2 )
